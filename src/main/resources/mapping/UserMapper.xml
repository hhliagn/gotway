<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gotway.gotway.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.gotway.gotway.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="phone_tag" jdbcType="INTEGER" property="phoneTag" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_tag" jdbcType="INTEGER" property="emailTag" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
    <result column="individuality_sign" jdbcType="VARCHAR" property="individualitySign" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="role_tag" jdbcType="INTEGER" property="roleTag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="system_model" jdbcType="VARCHAR" property="systemModel" />
    <result column="integral_level" jdbcType="INTEGER" property="integralLevel" />
    <result column="integral_qty" jdbcType="INTEGER" property="integralQty" />
    <result column="mileage_total" jdbcType="DOUBLE" property="mileageTotal" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="location_tag" jdbcType="INTEGER" property="locationTag" />
  </resultMap>
  <resultMap id="UserVo2ResultMap" type="com.gotway.gotway.pojo.vo.UserVo2" extends="BaseResultMap">
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="name" jdbcType="VARCHAR" property="roleName" />
    <association column="id" jdbcType="INTEGER" property="topicCount"  select="selectTopicCount" />
  </resultMap>
  <resultMap id="UserVoNearByResultMap" type="com.gotway.gotway.pojo.vo.UserVoNearBy" extends="BaseResultMap">
    <result column="distance" jdbcType="DOUBLE" property="distance" />
    <result column="isFocus" jdbcType="INTEGER" property="isFocus" />
  </resultMap>
  <resultMap id="UserForAppResultMap" type="com.gotway.gotway.pojo.vo.UserVoForApp" >
    <id column="userId" jdbcType="INTEGER" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="isFocus" jdbcType="INTEGER" property="isFocus" />
  </resultMap>
  <resultMap id="UserListResultMap" type="com.gotway.gotway.pojo.vo.UserVo3"  extends="BaseResultMap">
    <association column="id" jdbcType="INTEGER" property="topicCount"  select="selectTopicCount" />
  </resultMap>
  <select id="selectTopicCount" parameterType="int" resultType="int">
     select ifnull((select ifNull(topic_count,0) from t_top where mem_id=#{value}),0) from dual
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, nickname, real_name, birthday, phone, phone_tag, email, email_tag, password, 
    head_img, gender, area, weight, individuality_sign, user_type, role_tag, create_time, 
    state, system_model, integral_level, integral_qty, mileage_total, longitude, latitude, 
    location_tag
  </sql>
  <select id="selectByExample" parameterType="com.gotway.gotway.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gotway.gotway.pojo.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gotway.gotway.pojo.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (account, nickname, real_name, 
      birthday, phone, phone_tag, 
      email, email_tag, password, 
      head_img, gender, area, 
      weight, individuality_sign, user_type, 
      role_tag, create_time, state, 
      system_model, integral_level, integral_qty, 
      mileage_total, longitude, latitude, 
      location_tag)
    values (#{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, #{phoneTag,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{emailTag,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{headImg,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR}, 
      #{weight,jdbcType=DOUBLE}, #{individualitySign,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, 
      #{roleTag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{systemModel,jdbcType=VARCHAR}, #{integralLevel,jdbcType=INTEGER}, #{integralQty,jdbcType=INTEGER}, 
      #{mileageTotal,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, 
      #{locationTag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gotway.gotway.pojo.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="phoneTag != null">
        phone_tag,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailTag != null">
        email_tag,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="individualitySign != null">
        individuality_sign,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="roleTag != null">
        role_tag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="systemModel != null">
        system_model,
      </if>
      <if test="integralLevel != null">
        integral_level,
      </if>
      <if test="integralQty != null">
        integral_qty,
      </if>
      <if test="mileageTotal != null">
        mileage_total,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="locationTag != null">
        location_tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phoneTag != null">
        #{phoneTag,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailTag != null">
        #{emailTag,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="individualitySign != null">
        #{individualitySign,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="roleTag != null">
        #{roleTag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="systemModel != null">
        #{systemModel,jdbcType=VARCHAR},
      </if>
      <if test="integralLevel != null">
        #{integralLevel,jdbcType=INTEGER},
      </if>
      <if test="integralQty != null">
        #{integralQty,jdbcType=INTEGER},
      </if>
      <if test="mileageTotal != null">
        #{mileageTotal,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="locationTag != null">
        #{locationTag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gotway.gotway.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneTag != null">
        phone_tag = #{record.phoneTag,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTag != null">
        email_tag = #{record.emailTag,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.headImg != null">
        head_img = #{record.headImg,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.individualitySign != null">
        individuality_sign = #{record.individualitySign,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.roleTag != null">
        role_tag = #{record.roleTag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.systemModel != null">
        system_model = #{record.systemModel,jdbcType=VARCHAR},
      </if>
      <if test="record.integralLevel != null">
        integral_level = #{record.integralLevel,jdbcType=INTEGER},
      </if>
      <if test="record.integralQty != null">
        integral_qty = #{record.integralQty,jdbcType=INTEGER},
      </if>
      <if test="record.mileageTotal != null">
        mileage_total = #{record.mileageTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.locationTag != null">
        location_tag = #{record.locationTag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      phone = #{record.phone,jdbcType=VARCHAR},
      phone_tag = #{record.phoneTag,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      email_tag = #{record.emailTag,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      area = #{record.area,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=DOUBLE},
      individuality_sign = #{record.individualitySign,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      role_tag = #{record.roleTag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      system_model = #{record.systemModel,jdbcType=VARCHAR},
      integral_level = #{record.integralLevel,jdbcType=INTEGER},
      integral_qty = #{record.integralQty,jdbcType=INTEGER},
      mileage_total = #{record.mileageTotal,jdbcType=DOUBLE},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      location_tag = #{record.locationTag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gotway.gotway.pojo.User">
    update t_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phoneTag != null">
        phone_tag = #{phoneTag,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailTag != null">
        email_tag = #{emailTag,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="individualitySign != null">
        individuality_sign = #{individualitySign,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="roleTag != null">
        role_tag = #{roleTag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="systemModel != null">
        system_model = #{systemModel,jdbcType=VARCHAR},
      </if>
      <if test="integralLevel != null">
        integral_level = #{integralLevel,jdbcType=INTEGER},
      </if>
      <if test="integralQty != null">
        integral_qty = #{integralQty,jdbcType=INTEGER},
      </if>
      <if test="mileageTotal != null">
        mileage_total = #{mileageTotal,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="locationTag != null">
        location_tag = #{locationTag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gotway.gotway.pojo.User">
    update t_user
    set account = #{account,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      phone_tag = #{phoneTag,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      email_tag = #{emailTag,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=DOUBLE},
      individuality_sign = #{individualitySign,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      role_tag = #{roleTag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      system_model = #{systemModel,jdbcType=VARCHAR},
      integral_level = #{integralLevel,jdbcType=INTEGER},
      integral_qty = #{integralQty,jdbcType=INTEGER},
      mileage_total = #{mileageTotal,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      location_tag = #{locationTag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="checkRepeated" parameterType="String" resultType="int">
  	${value}
  </select>
  <select id="checkUserId" parameterType="int" resultType="int">
    select IFNULL(num1,0) +IFNULL(num2,0) from
      (select count(id) num1 from t_stick where user_id=#{id}) t1
      ,(select count(id) num2 from t_theme where user_id=#{id}) t2
  </select>
  <select id="selectUserWithRoleName" parameterType="com.gotway.gotway.pojo.UserExample" resultMap="UserVo2ResultMap">
    select t.*,t2.id role_id,t2.name from (
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    ) t
    left join t_user_role t1 on t.id=t1.user_id
    left join t_role t2 on t2.id=t1.role_id
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectNearBy" parameterType="map" resultMap="UserVoNearByResultMap">
    select t.*,case when t1.id is not null then 1 else 0 end  as isFocus from (
    select  * ,getDistance(#{latitude},#{longitude},latitude,longitude) distance from t_user
    where id&lt;&gt;#{id} and location_tag=1 and
    (case when #{distance} >50000  then 1=1 else (
      longitude - #{longitude} &lt; 1 AND longitude - #{longitude} &gt; -1 AND latitude - #{latitude} &lt; 1 AND latitude - #{latitude} &gt; -1
    ) end )
    ) t left join t_focus_log t1 on t1.user_id=t.id and t1.audience_id=#{id}
    where t.distance &lt;=#{distance} and t.distance &lt;&gt; -1
    order by t.distance asc
  </select>
  <select id="selectFocusOrFans" parameterType="map" resultMap="BaseResultMap">
    select t.* from t_user t inner join t_focus_log t1 on 1=1
    <if test="userId!=null and userId!=''">
      and  t1.audience_id=t.id and t1.user_id=#{userId}
    </if>
    <if test="audienceId!=null and audienceId!=''">
      and t1.user_id=t.id and t1.audience_id=#{audienceId}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample2" parameterType="com.gotway.gotway.pojo.UserExample" resultMap="UserListResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>