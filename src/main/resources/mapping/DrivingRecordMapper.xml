<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gotway.gotway.mapper.DrivingRecordMapper">
  <resultMap id="BaseResultMap" type="com.gotway.gotway.pojo.DrivingRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="device_mac" jdbcType="VARCHAR" property="deviceMac" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="mileage" jdbcType="DOUBLE" property="mileage" />
    <result column="duration" jdbcType="BIGINT" property="duration" />
    <result column="electricity" jdbcType="INTEGER" property="electricity" />
    <result column="highest_speed" jdbcType="DOUBLE" property="highestSpeed" />
    <result column="ave_speed" jdbcType="DOUBLE" property="aveSpeed" />
  </resultMap>
  <resultMap id="VoResultMap" type="com.gotway.gotway.pojo.vo.DrivingRecordVo" extends="BaseResultMap">
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="mileageTotal" jdbcType="DOUBLE" property="mileageTotal" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, device_name, device_mac, create_time, mileage, duration, electricity, 
    highest_speed, ave_speed
  </sql>
  <select id="selectByExample" parameterType="com.gotway.gotway.pojo.DrivingRecordExample" resultMap="VoResultMap">
    select t.*,t1.nickname userName,t1.account account,t1.gender,t1.mileage_total mileageTotal
    from (
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_driving_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    order by create_time desc
    ) t
    inner join (select user_id ,max(create_time) create_time from t_driving_record group by user_id ) tt on tt.user_id=t.user_id
    and tt.create_time=t.create_time
    left join t_user t1 on t1.id=t.user_id

    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_driving_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_driving_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gotway.gotway.pojo.DrivingRecordExample">
    delete from t_driving_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gotway.gotway.pojo.DrivingRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_driving_record (user_id, device_name, device_mac, 
      create_time, mileage, duration, 
      electricity, highest_speed, ave_speed
      )
    values (#{userId,jdbcType=INTEGER}, #{deviceName,jdbcType=VARCHAR}, #{deviceMac,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{mileage,jdbcType=DOUBLE}, #{duration,jdbcType=BIGINT}, 
      #{electricity,jdbcType=INTEGER}, #{highestSpeed,jdbcType=DOUBLE}, #{aveSpeed,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gotway.gotway.pojo.DrivingRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_driving_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="deviceMac != null">
        device_mac,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="electricity != null">
        electricity,
      </if>
      <if test="highestSpeed != null">
        highest_speed,
      </if>
      <if test="aveSpeed != null">
        ave_speed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceMac != null">
        #{deviceMac,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=DOUBLE},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=BIGINT},
      </if>
      <if test="electricity != null">
        #{electricity,jdbcType=INTEGER},
      </if>
      <if test="highestSpeed != null">
        #{highestSpeed,jdbcType=DOUBLE},
      </if>
      <if test="aveSpeed != null">
        #{aveSpeed,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gotway.gotway.pojo.DrivingRecordExample" resultType="java.lang.Long">
    select count(*) from t_driving_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_driving_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceMac != null">
        device_mac = #{record.deviceMac,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=DOUBLE},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=BIGINT},
      </if>
      <if test="record.electricity != null">
        electricity = #{record.electricity,jdbcType=INTEGER},
      </if>
      <if test="record.highestSpeed != null">
        highest_speed = #{record.highestSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.aveSpeed != null">
        ave_speed = #{record.aveSpeed,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_driving_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      device_mac = #{record.deviceMac,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      mileage = #{record.mileage,jdbcType=DOUBLE},
      duration = #{record.duration,jdbcType=BIGINT},
      electricity = #{record.electricity,jdbcType=INTEGER},
      highest_speed = #{record.highestSpeed,jdbcType=DOUBLE},
      ave_speed = #{record.aveSpeed,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gotway.gotway.pojo.DrivingRecord">
    update t_driving_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceMac != null">
        device_mac = #{deviceMac,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=DOUBLE},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=BIGINT},
      </if>
      <if test="electricity != null">
        electricity = #{electricity,jdbcType=INTEGER},
      </if>
      <if test="highestSpeed != null">
        highest_speed = #{highestSpeed,jdbcType=DOUBLE},
      </if>
      <if test="aveSpeed != null">
        ave_speed = #{aveSpeed,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gotway.gotway.pojo.DrivingRecord">
    update t_driving_record
    set user_id = #{userId,jdbcType=INTEGER},
      device_name = #{deviceName,jdbcType=VARCHAR},
      device_mac = #{deviceMac,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      mileage = #{mileage,jdbcType=DOUBLE},
      duration = #{duration,jdbcType=BIGINT},
      electricity = #{electricity,jdbcType=INTEGER},
      highest_speed = #{highestSpeed,jdbcType=DOUBLE},
      ave_speed = #{aveSpeed,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectForStatisticsLastWeek" resultType="map">
    SELECT user_id,ifnull(sum(mileage),0) sumMileage FROM t_driving_record
    where create_time&gt;=date_sub(now(),interval 7 day) and create_time&lt;=now()
    group by user_id
  </select>
  <select id="selectForStatisticsLastMonth" resultType="map">
    SELECT user_id,ifnull(sum(mileage),0) sumMileage FROM t_driving_record
    where create_time&gt;=date_sub(now(),interval 1 MONTH) and create_time&lt;=now()
    group by user_id
  </select>
</mapper>